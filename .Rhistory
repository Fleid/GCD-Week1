install.packages("swirl")
> library("swirl")
library("swirl")
library(xlsx)
setwd("~/Documents/GitHub/GCD-Week1")
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,rowindex=18,nrow=6,colindex=7, ncol=9)
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,sheetIndex=1,rowindex=18,nrow=6,colindex=7, ncol=9)
dat
?read.xlsx
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,sheetIndex=1,startRow=18,endRow=23,colindex=7)
dat
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,sheetIndex=1,startRow=18,endRow=23,colIndex=7)
dat
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,sheetIndex=1,startRow=18,endRow=23)
dat
dat[c(7:15),]
dat[7,]
dat[,7]
dat[,c(7:15)]
dat <- dat[,c(7:15)]
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile="Resto.xml",method="curl")
?fread()
library(data.table)
install.library(data.table)
install.packages("data.table")
library(data.table)
?fread
DT <- fread("Resto.xml")
install.package(xml)
install.packages(xml)
install.packages("XML")
library(XML)
myData <- xmlTrueParse("Resto.xml",useInternal=TRUE)
?xmlTrueParse
myData <- XMLTrueParse("Resto.xml",useInternal=TRUE)
myData <- xmlTreeParse("Resto.xml",useInternal=TRUE)
head(MyData)
rootnaode <- xmlroo(myData)
rootnaode <- xmlRoot(myData)
rootNode <- xmlRoot(myData)
names(rootNode)
rootNode[[1]]
xpathSapply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
DT <- xpathSApply(rootNode,"//zipcode",xmlValue)
head(DT)
nrow(DT[DT$1==21231,])
describe(DT)
summary(DT)
v <- xpathSApply(rootNode,"//zipcode",xmlValue)
v[v==21231]
count(v[v==21231])
sum(v[v==21231])
nrow(v[v==21231])
ncol(v[v==21231])
summary(v[v==21231])
a <- table(v)
a
a[a==21231]
a[names(a)==21231]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="pid.csv",method="curl")
?fread
DT <- fread("pid.csv")
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
?system.time
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time({sapply(split(DT$pwgtp15,DT$SEX),mean)})
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="DL_Data2006.csv",method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf",destfile="DL_Data2006.pdf",method="curl")
myData <- read.table("DL_Data2006.csv",sep=",",header=TRUE)
#Number of rows of property over 1Mâ‚¬
nrow(subset(myData,myData$VAL==24))
library(xlsx)
dat <- read.xlsx("govNGAP.xlsx",header=TRUE,sheetIndex=1,startRow=18,endRow=23)
dat <- dat[,c(7:15)]
sum(dat$Zip*dat$Ext,na.rm=T)
myData <- xmlTreeParse("Resto.xml",useInternal=TRUE)
rootNode <- xmlRoot(myData)
#How many restaurants have zipcode 21231?
v <- xpathSApply(rootNode,"//zipcode",xmlValue)
a <- table(v)
a[names(a)==21231]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
mean(DT$pwgtp15,by=DT$SEX)
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
